
package de.samples.apicomparison.provider.boundary.soap.stubs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "BlogPostService", targetNamespace = "http://samples.de/spring/soap/blog/service", wsdlLocation = "file:/E:/Daten/Sonstige/github/api-comparison/service-provider/src/main/resources/soap/blogPostService.wsdl")
public class BlogPostService
    extends Service
{

    private static final URL BLOGPOSTSERVICE_WSDL_LOCATION;
    private static final WebServiceException BLOGPOSTSERVICE_EXCEPTION;
    private static final QName BLOGPOSTSERVICE_QNAME = new QName("http://samples.de/spring/soap/blog/service", "BlogPostService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/E:/Daten/Sonstige/github/api-comparison/service-provider/src/main/resources/soap/blogPostService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BLOGPOSTSERVICE_WSDL_LOCATION = url;
        BLOGPOSTSERVICE_EXCEPTION = e;
    }

    public BlogPostService() {
        super(__getWsdlLocation(), BLOGPOSTSERVICE_QNAME);
    }

    public BlogPostService(WebServiceFeature... features) {
        super(__getWsdlLocation(), BLOGPOSTSERVICE_QNAME, features);
    }

    public BlogPostService(URL wsdlLocation) {
        super(wsdlLocation, BLOGPOSTSERVICE_QNAME);
    }

    public BlogPostService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BLOGPOSTSERVICE_QNAME, features);
    }

    public BlogPostService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BlogPostService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BlogPostServiceInterface
     */
    @WebEndpoint(name = "BlogPostServicePort")
    public BlogPostServiceInterface getBlogPostServicePort() {
        return super.getPort(new QName("http://samples.de/spring/soap/blog/service", "BlogPostServicePort"), BlogPostServiceInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BlogPostServiceInterface
     */
    @WebEndpoint(name = "BlogPostServicePort")
    public BlogPostServiceInterface getBlogPostServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://samples.de/spring/soap/blog/service", "BlogPostServicePort"), BlogPostServiceInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BLOGPOSTSERVICE_EXCEPTION!= null) {
            throw BLOGPOSTSERVICE_EXCEPTION;
        }
        return BLOGPOSTSERVICE_WSDL_LOCATION;
    }

}
